{
  "$schema": "https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/2.2.0/schema.json",
  "name": "4e0e5ab5ee23e004217d",
  "position": {
    "x": 558.46238702334711,
    "y": 1.2153526163151305,
    "z": 7000,
    "height": 674.66236377410837,
    "width": 794.80170137444281
  },
  "visual": {
    "visualType": "deneb7E15AEF80B9E4D4F8E12924291ECE89A",
    "query": {
      "queryState": {
        "dataset": {
          "projections": [
            {
              "field": {
                "Aggregation": {
                  "Expression": {
                    "Column": {
                      "Expression": {
                        "SourceRef": {
                          "Entity": "perception_gap"
                        }
                      },
                      "Property": "Diff"
                    }
                  },
                  "Function": 0
                }
              },
              "queryRef": "Sum(american_perceptions.Diff)",
              "nativeQueryRef": "Diff"
            },
            {
              "field": {
                "Aggregation": {
                  "Expression": {
                    "Column": {
                      "Expression": {
                        "SourceRef": {
                          "Entity": "perception_gap"
                        }
                      },
                      "Property": "Estimated"
                    }
                  },
                  "Function": 0
                }
              },
              "queryRef": "Sum(american_perceptions.Estimated)",
              "nativeQueryRef": "Estimated"
            },
            {
              "field": {
                "Aggregation": {
                  "Expression": {
                    "Column": {
                      "Expression": {
                        "SourceRef": {
                          "Entity": "perception_gap"
                        }
                      },
                      "Property": "Sign"
                    }
                  },
                  "Function": 0
                }
              },
              "queryRef": "Sum(american_perceptions.Sign)",
              "nativeQueryRef": "Sign"
            },
            {
              "field": {
                "Column": {
                  "Expression": {
                    "SourceRef": {
                      "Entity": "perception_gap"
                    }
                  },
                  "Property": "Topic"
                }
              },
              "queryRef": "american_perceptions.Topic",
              "nativeQueryRef": "Topic"
            },
            {
              "field": {
                "Aggregation": {
                  "Expression": {
                    "Column": {
                      "Expression": {
                        "SourceRef": {
                          "Entity": "perception_gap"
                        }
                      },
                      "Property": "True"
                    }
                  },
                  "Function": 0
                }
              },
              "queryRef": "Sum(american_perceptions.True)",
              "nativeQueryRef": "True"
            }
          ]
        }
      },
      "sortDefinition": {
        "sort": [
          {
            "field": {
              "Aggregation": {
                "Expression": {
                  "Column": {
                    "Expression": {
                      "SourceRef": {
                        "Entity": "perception_gap"
                      }
                    },
                    "Property": "Diff"
                  }
                },
                "Function": 0
              }
            },
            "direction": "Descending"
          }
        ],
        "isDefaultSort": true
      }
    },
    "objects": {
      "display": [
        {
          "properties": {}
        }
      ],
      "vega": [
        {
          "properties": {
            "provider": {
              "expr": {
                "Literal": {
                  "Value": "'vegaLite'"
                }
              }
            },
            "jsonSpec": {
              "expr": {
                "Literal": {
                  "Value": "'{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Comparison chart connecting ''True'' and ''Estimated'' values per topic, with conditional color and text logic.\",\n\n  \"data\": {\"name\": \"dataset\"}, // dataset reference\n\n  // TRANSFORM SECTION (preprocessing and condition-based calculations)\n  \"transform\": [\n    {\n      // assigns a custom color depending on the ''Sign'' field\n      // blue (#0D6ABF) for positive, red (#A1343C) for negative\n      \"name\": \"colourTest\",\n      \"calculate\": \"datum[''Sign''] == 1 ? ''#0D6ABF'' : ''#A1343C''\",\n      \"as\": \"cf_colour\" // new field storing color code\n    },\n    {\n      // calculates text offset for label placement\n      // offsets vary depending on ''Sign'' and threshold of ''True''\n      \"name\": \"actualTest\",\n      \"calculate\": \"datum[''Sign''] == 1 && datum[''True''] > 0.1 ? -44 : datum[''Sign''] == 1 && datum[''True''] <= 0.1 ? -34 : 12\",\n      \"as\": \"cf_text\" // new field controlling text y-offset\n    },\n    {\n      // test field for possible future use (currently outputs constant 0)\n      \"name\": \"estimateTest\",\n      \"calculate\": \"datum[''Sign''] == 1 ? 0 : 0\",\n      \"as\": \"cf_estimate\"\n    }\n  ],\n\n  // GLOBAL ENCODING (defines shared axes)\n  \"encoding\": {\n    // X CHANNEL (horizontal axis for numeric values)\n    \"x\": {\n      \"field\": \"True\", // actual measured value\n      \"type\": \"quantitative\",\n      \"axis\": {\n        \"title\": null, // no axis title\n        \"labels\": false, // hides tick labels for minimalist style\n        \"grid\": false, // no gridlines\n        \"domain\": true, // keep baseline visible\n        \"domainOpacity\": 0.2 // faint baseline line\n      }\n    },\n\n    // Y CHANNEL (categorical axis for topics)\n    \"y\": {\n      \"field\": \"Topic\", // each topic or category\n      \"type\": \"nominal\",\n      \"axis\": {\n        \"labelFontSize\": 16, // large font for readability\n        \"labelLimit\": 0, // do not truncate long topic names\n        \"title\": null,\n        \"labelPadding\": 50, // adds horizontal padding between labels and marks\n        \"bandPosition\": -0.03, // slightly shifts marks relative to category bands\n        \"domain\": false, // remove baseline\n        // alternating grid color logic (e.g. highlight first row differently)\n        \"gridColor\": {\n          \"condition\": {\n            \"test\": {\"field\": \"index\", \"equal\": 0},\n            \"value\": \"transparent\" // hide top gridline\n          },\n          \"value\": \"whitesmoke\" // default gridline color\n        }\n      },\n      \"title\": \"Actual\", // axis title\n      \"sort\": {\n        \"field\": \"Estimated\", // sort topics by estimated value\n        \"order\": \"ascending\"\n      }\n    }\n  },\n\n  // LAYERED STRUCTURE\n  \"layer\": [\n    {\n      \"description\": \"Mark 1: connecting line between True and Estimated values\",\n      \"mark\": {\n        \"type\": \"line\", // line mark connecting two numeric points\n        \"opacity\": 0.5, // partially transparent\n        \"tooltip\": true, // show interactive tooltip on hover\n        \"color\": \"black\" // fixed line color\n      },\n      \"encoding\": {\n        // start and end of the line\n        \"x\": {\"field\": \"True\"}, // starting point (True value)\n        \"x2\": {\"field\": \"Estimated\"} // ending point (Estimated value)\n      }\n    }\n  ]\n}'"
                }
              }
            },
            "jsonConfig": {
              "expr": {
                "Literal": {
                  "Value": "'{\n  \"view\": {\"stroke\": \"transparent\"},\n  \"font\": \"Segoe UI\",\n  \"arc\": {},\n  \"area\": {\n    \"line\": true,\n    \"opacity\": 0.6\n  },\n  \"bar\": {},\n  \"line\": {\n    \"strokeWidth\": 3,\n    \"strokeCap\": \"round\",\n    \"strokeJoin\": \"round\"\n  },\n  \"path\": {},\n  \"point\": {\"filled\": true, \"size\": 75},\n  \"rect\": {},\n  \"shape\": {},\n  \"symbol\": {\n    \"strokeWidth\": 1.5,\n    \"size\": 50\n  },\n  \"text\": {\n    \"font\": \"Segoe UI\",\n    \"fontSize\": 12,\n    \"fill\": \"#605E5C\"\n  },\n  \"axis\": {\n    \"ticks\": false,\n    \"grid\": true,\n    \"domain\": false,\n    \"labelColor\": \"#605E5C\",\n    \"labelFontSize\": 12,\n    \"titleFont\": \"wf_standard-font, helvetica, arial, sans-serif\",\n    \"titleColor\": \"#252423\",\n    \"titleFontSize\": 16,\n    \"titleFontWeight\": \"normal\"\n  },\n  \"axisQuantitative\": {\n    \"tickCount\": 3,\n    \"grid\": true,\n    \"gridColor\": \"#C8C6C4\",\n    \"gridDash\": [1, 5],\n    \"labelFlush\": false\n  },\n  \"axisX\": {\"labelPadding\": 5},\n  \"axisY\": {\"labelPadding\": 10},\n  \"header\": {\n    \"titleFont\": \"wf_standard-font, helvetica, arial, sans-serif\",\n    \"titleFontSize\": 16,\n    \"titleColor\": \"#252423\",\n    \"labelFont\": \"Segoe UI\",\n    \"labelFontSize\": 13.333333333333332,\n    \"labelColor\": \"#605E5C\"\n  },\n  \"legend\": {\n    \"titleFont\": \"Segoe UI\",\n    \"titleFontWeight\": \"bold\",\n    \"titleColor\": \"#605E5C\",\n    \"labelFont\": \"Segoe UI\",\n    \"labelFontSize\": 13.333333333333332,\n    \"labelColor\": \"#605E5C\",\n    \"symbolType\": \"circle\",\n    \"symbolSize\": 75\n  }\n}'"
                }
              }
            },
            "isNewDialogOpen": {
              "expr": {
                "Literal": {
                  "Value": "false"
                }
              }
            },
            "enableTooltips": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableContextMenu": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableHighlight": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableSelection": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "selectionMaxDataPoints": {
              "expr": {
                "Literal": {
                  "Value": "50D"
                }
              }
            },
            "version": {
              "expr": {
                "Literal": {
                  "Value": "'6.1.0'"
                }
              }
            }
          }
        }
      ],
      "developer": [
        {
          "properties": {
            "version": {
              "expr": {
                "Literal": {
                  "Value": "'1.8.1.0'"
                }
              }
            }
          }
        }
      ],
      "stateManagement": [
        {
          "properties": {
            "viewportHeight": {
              "expr": {
                "Literal": {
                  "Value": "660.6623637741084D"
                }
              }
            },
            "viewportWidth": {
              "expr": {
                "Literal": {
                  "Value": "780.8017013744428D"
                }
              }
            }
          }
        }
      ]
    },
    "visualContainerObjects": {
      "border": [
        {
          "properties": {
            "color": {
              "solid": {
                "color": {
                  "expr": {
                    "ThemeDataColor": {
                      "ColorId": 0,
                      "Percent": -0.3
                    }
                  }
                }
              }
            },
            "radius": {
              "expr": {
                "Literal": {
                  "Value": "6D"
                }
              }
            },
            "show": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            }
          }
        }
      ],
      "title": [
        {
          "properties": {
            "text": {
              "expr": {
                "Literal": {
                  "Value": "'chart_1'"
                }
              }
            }
          }
        }
      ],
      "visualHeader": [
        {
          "properties": {
            "background": {
              "solid": {
                "color": {
                  "expr": {
                    "Literal": {
                      "Value": "'#FFF7CF'"
                    }
                  }
                }
              }
            },
            "border": {
              "solid": {
                "color": {
                  "expr": {
                    "ThemeDataColor": {
                      "ColorId": 8,
                      "Percent": -0.25
                    }
                  }
                }
              }
            },
            "foreground": {
              "solid": {
                "color": {
                  "expr": {
                    "ThemeDataColor": {
                      "ColorId": 1,
                      "Percent": 0
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "drillFilterOtherVisuals": true
  },
  "parentGroupName": "00543a02469822c7d794"
}