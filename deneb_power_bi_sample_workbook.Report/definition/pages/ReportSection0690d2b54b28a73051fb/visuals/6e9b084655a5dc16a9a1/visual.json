{
  "$schema": "https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/2.2.0/schema.json",
  "name": "6e9b084655a5dc16a9a1",
  "position": {
    "x": 558.30662499668642,
    "y": 0.65374260055631073,
    "z": 3000,
    "height": 674.56042439475038,
    "width": 793.26138799968612,
    "tabOrder": 5000
  },
  "visual": {
    "visualType": "deneb7E15AEF80B9E4D4F8E12924291ECE89A",
    "query": {
      "queryState": {
        "dataset": {
          "projections": [
            {
              "field": {
                "Aggregation": {
                  "Expression": {
                    "Column": {
                      "Expression": {
                        "SourceRef": {
                          "Entity": "perception_gap"
                        }
                      },
                      "Property": "Diff"
                    }
                  },
                  "Function": 0
                }
              },
              "queryRef": "Sum(perception_gap.Diff)",
              "nativeQueryRef": "Diff"
            },
            {
              "field": {
                "Aggregation": {
                  "Expression": {
                    "Column": {
                      "Expression": {
                        "SourceRef": {
                          "Entity": "perception_gap"
                        }
                      },
                      "Property": "Estimated"
                    }
                  },
                  "Function": 0
                }
              },
              "queryRef": "Sum(perception_gap.Estimated)",
              "nativeQueryRef": "Estimated"
            },
            {
              "field": {
                "Aggregation": {
                  "Expression": {
                    "Column": {
                      "Expression": {
                        "SourceRef": {
                          "Entity": "perception_gap"
                        }
                      },
                      "Property": "Sign"
                    }
                  },
                  "Function": 0
                }
              },
              "queryRef": "Sum(perception_gap.Sign)",
              "nativeQueryRef": "Sign"
            },
            {
              "field": {
                "Column": {
                  "Expression": {
                    "SourceRef": {
                      "Entity": "perception_gap"
                    }
                  },
                  "Property": "Topic"
                }
              },
              "queryRef": "perception_gap.Topic",
              "nativeQueryRef": "Topic"
            },
            {
              "field": {
                "Aggregation": {
                  "Expression": {
                    "Column": {
                      "Expression": {
                        "SourceRef": {
                          "Entity": "perception_gap"
                        }
                      },
                      "Property": "True"
                    }
                  },
                  "Function": 0
                }
              },
              "queryRef": "Sum(perception_gap.True)",
              "nativeQueryRef": "True"
            }
          ]
        }
      },
      "sortDefinition": {
        "sort": [
          {
            "field": {
              "Aggregation": {
                "Expression": {
                  "Column": {
                    "Expression": {
                      "SourceRef": {
                        "Entity": "perception_gap"
                      }
                    },
                    "Property": "Diff"
                  }
                },
                "Function": 0
              }
            },
            "direction": "Descending"
          }
        ],
        "isDefaultSort": true
      }
    },
    "objects": {
      "display": [
        {
          "properties": {}
        }
      ],
      "vega": [
        {
          "properties": {
            "provider": {
              "expr": {
                "Literal": {
                  "Value": "'vegaLite'"
                }
              }
            },
            "jsonSpec": {
              "expr": {
                "Literal": {
                  "Value": "'{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n\n  \"data\": {\"name\": \"dataset\"}, // named dataset (expected from Power BI or external data source)\n\n  // TRANSFORMS (compute helper fields for conditional color, offsets, etc.)\n  \"transform\": [\n    {\n      \"name\": \"colourTest\",\n      // assigns blue (#0D6ABF) for positive Sign, red (#A1343C) for negative\n      \"calculate\": \"datum[''Sign''] == 1 ? ''#0D6ABF'' : ''#A1343C''  \",\n      \"as\": \"cf_colour\" // creates new field storing color code\n    },\n    {\n      \"name\": \"actualTest\",\n      // assigns custom offset (for text position) based on Sign and True value thresholds\n      \"calculate\": \"datum[''Sign''] == 1 && datum[''True''] > 0.1 ? -44 : datum[''Sign''] == 1 && datum[''True''] <= 0.1 ? -34  : 12  \",\n      \"as\": \"cf_text\" // used to control text placement dynamically\n    },\n    {\n      \"name\": \"estimateTest\",\n      // placeholder transform, currently always outputs 0\n      \"calculate\": \"datum[''Sign''] == 1 ? 0 : 0  \",\n      \"as\": \"cf_estimate\"\n    }\n  ],\n\n  // GLOBAL ENCODING (shared across layers)\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"True\", // quantitative measure for actual value\n      \"type\": \"quantitative\",\n      \"axis\": {\n        \"title\": null, // hides x-axis title\n        \"labels\": false, // removes numeric tick labels\n        \"grid\": false, // hides gridlines\n        \"domain\": true, // retains axis baseline\n        \"domainOpacity\": 0.2 // faint baseline line for subtle reference\n      }\n    },\n    \"y\": {\n      \"field\": \"Topic\", // topic or category for each comparison\n      \"type\": \"nominal\", // categorical variable\n      \"axis\": {\n        \"labelFontSize\": 16, // larger, readable labels\n        \"labelLimit\": 0, // prevents truncating topic names\n        \"title\": null, // hides y-axis title\n        \"labelPadding\": 50, // distance between labels and marks\n        \"bandPosition\": -0.03, // small upward offset for vertical centering\n        \"domain\": false, // hides baseline\n        // gridline color conditional: transparent for first line only\n        \"gridColor\": {\n          \"condition\": {\n            \"test\": {\n              \"field\": \"index\",\n              \"equal\": 0\n            },\n            \"value\": \"transparent\"\n          },\n          \"value\": \"whitesmoke\"\n        }\n      },\n      \"title\": \"Actual\", // semantic reference for the axis (not shown)\n      \"sort\": {\n        \"field\": \"Estimated\", // sorts categories by estimated value\n        \"order\": \"ascending\"\n      }\n    }\n  },\n\n  \"description\": \"layer1\", // descriptive metadata (useful for referencing in reports)\n\n  // LAYERED VISUAL STRUCTURE\n  \"layer\": [\n    {\n      \"description\": \"Mark 1\",\n      \"mark\": {\n        \"type\": \"line\", // connector line between True and Estimated\n        \"opacity\": 0.5, // semi-transparent\n        \"tooltip\": true, // enables hover tooltips\n        \"color\": \"steelblue\" // soft blue tone for connectors\n      },\n      \"encoding\": {\n        \"x\": {\"field\": \"True\"}, // starting point\n        \"x2\": {\"field\": \"Estimated\"} // ending point (creates connecting segment)\n      }\n    },\n    {\n      \"description\": \"Mark 2\",\n      \"mark\": {\n        \"type\": \"point\", // circular marker for True values\n        \"size\": 150,\n        \"filled\": true,\n        \"opacity\": 1,\n        \"color\": \"gainsboro\", // neutral gray for baseline\n        \"stroke\": \"black\", // thin outline for clarity\n        \"strokeWidth\": 0.5\n      },\n      \"encoding\": {\n        \"x\": {\"field\": \"True\"} // plots actual (True) value position\n      }\n    },\n    {\n      \"description\": \"Mark 3\",\n      \"mark\": {\n        \"type\": \"point\", // circular marker for Estimated values\n        \"size\": 150,\n        \"filled\": true,\n        \"opacity\": 1,\n        \"stroke\": \"black\",\n        \"strokeWidth\": 0.5\n      },\n      \"encoding\": {\n        \"x\": {\"field\": \"Estimated\"} // plots predicted (Estimated) position\n      }\n    },\n    {\n      \"description\": \"Mark 5\", // text label showing Estimated value\n      \"mark\": {\n        \"type\": \"text\", // textual annotation mark\n        \"fontSize\": 16, // readable text size\n        \"fontWeight\": \"bold\", // emphasize label\n        \"color\": \"steelblue\", // consistent with connecting line\n        // conditional alignment based on sign\n        \"align\": {\n          \"expr\": \"datum[''Sign''] == 1 ? ''left'' : ''right''\"\n        },\n        // horizontal offset: move label slightly left/right depending on sign\n        \"xOffset\": {\n          \"expr\": \"datum[''Sign''] == 1 ? 10 : -10\"\n        },\n        \"yOffset\": 1 // small vertical nudge to visually center label\n      },\n      \"encoding\": {\n        \"x\": {\"field\": \"Estimated\"}, // position text next to Estimated value\n        \"text\": {\n          \"field\": \"Estimated\", // display numeric value as formatted text\n          \"type\": \"quantitative\",\n          \"format\": \"0%\", // show as percentage format\n          \"formatType\": \"pbiFormat\" // use Power BI number formatting engine\n        }\n      }\n    }\n  ]\n}'"
                }
              }
            },
            "jsonConfig": {
              "expr": {
                "Literal": {
                  "Value": "'{\n  \"view\": {\"stroke\": \"transparent\"},\n  \"font\": \"Segoe UI\",\n  \"arc\": {},\n  \"area\": {\n    \"line\": true,\n    \"opacity\": 0.6\n  },\n  \"bar\": {},\n  \"line\": {\n    \"strokeWidth\": 3,\n    \"strokeCap\": \"round\",\n    \"strokeJoin\": \"round\"\n  },\n  \"path\": {},\n  \"point\": {\"filled\": true, \"size\": 75},\n  \"rect\": {},\n  \"shape\": {},\n  \"symbol\": {\n    \"strokeWidth\": 1.5,\n    \"size\": 50\n  },\n  \"text\": {\n    \"font\": \"Segoe UI\",\n    \"fontSize\": 12,\n    \"fill\": \"#605E5C\"\n  },\n  \"axis\": {\n    \"ticks\": false,\n    \"grid\": true,\n    \"domain\": false,\n    \"labelColor\": \"#605E5C\",\n    \"labelFontSize\": 12,\n    \"titleFont\": \"wf_standard-font, helvetica, arial, sans-serif\",\n    \"titleColor\": \"#252423\",\n    \"titleFontSize\": 16,\n    \"titleFontWeight\": \"normal\"\n  },\n  \"axisQuantitative\": {\n    \"tickCount\": 3,\n    \"grid\": true,\n    \"gridColor\": \"#C8C6C4\",\n    \"gridDash\": [1, 5],\n    \"labelFlush\": false\n  },\n  \"axisX\": {\"labelPadding\": 5},\n  \"axisY\": {\"labelPadding\": 10},\n  \"header\": {\n    \"titleFont\": \"wf_standard-font, helvetica, arial, sans-serif\",\n    \"titleFontSize\": 16,\n    \"titleColor\": \"#252423\",\n    \"labelFont\": \"Segoe UI\",\n    \"labelFontSize\": 13.333333333333332,\n    \"labelColor\": \"#605E5C\"\n  },\n  \"legend\": {\n    \"titleFont\": \"Segoe UI\",\n    \"titleFontWeight\": \"bold\",\n    \"titleColor\": \"#605E5C\",\n    \"labelFont\": \"Segoe UI\",\n    \"labelFontSize\": 13.333333333333332,\n    \"labelColor\": \"#605E5C\",\n    \"symbolType\": \"circle\",\n    \"symbolSize\": 75\n  }\n}'"
                }
              }
            },
            "isNewDialogOpen": {
              "expr": {
                "Literal": {
                  "Value": "false"
                }
              }
            },
            "enableTooltips": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableContextMenu": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableHighlight": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableSelection": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "selectionMaxDataPoints": {
              "expr": {
                "Literal": {
                  "Value": "50D"
                }
              }
            },
            "version": {
              "expr": {
                "Literal": {
                  "Value": "'6.4.1'"
                }
              }
            }
          }
        }
      ],
      "developer": [
        {
          "properties": {
            "version": {
              "expr": {
                "Literal": {
                  "Value": "'1.8.2.0'"
                }
              }
            }
          }
        }
      ],
      "stateManagement": [
        {
          "properties": {
            "viewportHeight": {
              "expr": {
                "Literal": {
                  "Value": "660.5604243947504D"
                }
              }
            },
            "viewportWidth": {
              "expr": {
                "Literal": {
                  "Value": "779.2613879996861D"
                }
              }
            }
          }
        }
      ]
    },
    "visualContainerObjects": {
      "border": [
        {
          "properties": {
            "color": {
              "solid": {
                "color": {
                  "expr": {
                    "ThemeDataColor": {
                      "ColorId": 0,
                      "Percent": -0.3
                    }
                  }
                }
              }
            },
            "radius": {
              "expr": {
                "Literal": {
                  "Value": "6D"
                }
              }
            },
            "show": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            }
          }
        }
      ],
      "title": [
        {
          "properties": {
            "text": {
              "expr": {
                "Literal": {
                  "Value": "'chart_3'"
                }
              }
            }
          }
        }
      ],
      "visualHeader": [
        {
          "properties": {
            "background": {
              "solid": {
                "color": {
                  "expr": {
                    "Literal": {
                      "Value": "'#FFF7CF'"
                    }
                  }
                }
              }
            },
            "border": {
              "solid": {
                "color": {
                  "expr": {
                    "ThemeDataColor": {
                      "ColorId": 8,
                      "Percent": -0.25
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "drillFilterOtherVisuals": true
  },
  "parentGroupName": "00543a02469822c7d794",
  "isHidden": true
}