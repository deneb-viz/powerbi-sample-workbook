{
  "$schema": "https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/2.2.0/schema.json",
  "name": "27f7f9ca851c804d5341",
  "position": {
    "x": 26.892448262183862,
    "y": 235.30892229410878,
    "z": 0,
    "height": 394.9828338508255,
    "width": 532.80663119451776
  },
  "visual": {
    "visualType": "deneb7E15AEF80B9E4D4F8E12924291ECE89A",
    "query": {
      "queryState": {
        "dataset": {
          "projections": [
            {
              "field": {
                "Column": {
                  "Expression": {
                    "SourceRef": {
                      "Entity": "numberFormatting"
                    }
                  },
                  "Property": "Index"
                }
              },
              "queryRef": "numberFormatting.Index",
              "nativeQueryRef": "Index1"
            },
            {
              "field": {
                "Column": {
                  "Expression": {
                    "SourceRef": {
                      "Entity": "numberFormatting"
                    }
                  },
                  "Property": "Value"
                }
              },
              "queryRef": "Sum(numberFormatting.Value)",
              "nativeQueryRef": "Value1"
            }
          ]
        }
      },
      "sortDefinition": {
        "sort": [
          {
            "field": {
              "Column": {
                "Expression": {
                  "SourceRef": {
                    "Entity": "numberFormatting"
                  }
                },
                "Property": "Index"
              }
            },
            "direction": "Ascending"
          }
        ],
        "isDefaultSort": true
      }
    },
    "objects": {
      "display": [
        {
          "properties": {}
        }
      ],
      "vega": [
        {
          "properties": {
            "provider": {
              "expr": {
                "Literal": {
                  "Value": "'vegaLite'"
                }
              }
            },
            "jsonSpec": {
              "expr": {
                "Literal": {
                  "Value": "'{\n  // define the input dataset\n  \"data\": {\"name\": \"dataset\"},\n\n  // define reusable parameters (predefined numeric format patterns)\n  \"params\": [\n    { \"name\": \"_quintillions\",  \"value\": \"#,0,,,,,,.#\" }, // pattern for very large (10^18) values\n    { \"name\": \"_quadrillions\",  \"value\": \"#,0,,,,,.#\"   }, // for 10^15 scale\n    { \"name\": \"_trillions\",     \"value\": \"#,0,,,,.#\"    }, // for 10^12 scale\n    { \"name\": \"_billions\",      \"value\": \"#,0,,,.#\"     }, // for 10^9 scale\n    { \"name\": \"_millions\",      \"value\": \"#,0,,.#\"      }, // for 10^6 scale\n    { \"name\": \"_thousands\",     \"value\": \"#,0,.#\"       }  // for 10^3 scale\n  ],\n\n  // calculate new fields for formatted display\n  \"transform\": [\n    {\n      // count digits (minus one) to approximate magnitude of the number\n      \"calculate\": \"length(toString(datum.Value))-1\",\n      \"as\": \"_zeros\"\n    },\n    {\n      // apply comma thousand separators to raw value\n      \"calculate\": \"format(datum.Value, '',.0f'')\",\n      \"as\": \"thousandSeparator\"\n    },\n    {\n      // classify each number into a denomination group based on length\n      \"calculate\": \"datum._zeros >= 18 ? ''quintillions'' : datum._zeros >= 15 ? ''quadrillions'' : datum._zeros >= 12 ? ''trillions'' : datum._zeros >= 9 ? ''billions'' : datum._zeros >= 6 ? ''millions'' : datum._zeros >= 3 ? ''thousands'' : ''hundreds''\",\n      \"as\": \"denominations\"\n    },\n    {\n      // dynamic numeric formatter: converts numbers into scaled readable values\n      // e.g. 2,500,000 → 2.5M, 5,000 → 5K, etc.\n      \"calculate\": \"datum.Value >= 1e18 ? format((datum.Value / 1e18),'',.1f'') + ''Q'' : datum.Value >= 1e16 ? format((datum.Value / 1e15), '',.1~f'') + ''q'' : datum.Value >= 1e12 ? format((datum.Value / 1e12), '',.1~f'') + ''T'' : datum.Value >= 1e9 ? format((datum.Value / 1e9), '',.1~f'') + ''B'' : datum.Value >= 1e6 ? format((datum.Value / 1e6), '',.1~f'') + ''M'' : datum.Value >= 1e3 ? format((datum.Value / 1e3), '',.1~f'') + ''K'' : format(datum.Value, '',.1~f'')\",\n      \"as\": \"format_v0\"\n    }\n  ],\n\n  // shared encoding (applied to concatenated visuals)\n  \"encoding\": {\n    \"y\": {\n      \"field\": \"__row__\", // used to align text across charts\n      \"type\": \"ordinal\",\n      \"axis\": null\n    },\n    \"color\": {}, // left blank for possible extensions\n    \"fill\": {}\n  },\n\n  \"spacing\": 30, // spacing between concatenated views\n\n  // horizontally concatenated small text displays\n  \"hconcat\": [\n    {\n      // first column: show raw values\n      \"width\": 50,\n      \"height\": 300,\n      \"title\": {\n        \"text\": [\"Raw\", \"Value\"],\n        \"fontSize\": 25\n      },\n      \"mark\": {\n        \"type\": \"text\",\n        \"fontSize\": 20,\n        \"align\": \"right\",\n        \"dx\": 10 // small horizontal offset from axis\n      },\n      \"encoding\": {\n        \"text\": {\n          \"field\": \"Value\", // raw numeric value\n          \"type\": \"nominal\"\n        },\n        \"y\": {\n          \"field\": \"Index\", // maintain vertical order\n          \"type\": \"ordinal\",\n          \"axis\": null\n        }\n      }\n    },\n    {\n      // second column: display formatted version with thousand separators\n      \"width\": 50,\n      \"height\": 300,\n      \"title\": {\n        \"text\": [\"Thousand\", \"Separator\"],\n        \"fontSize\": 25\n      },\n      \"mark\": {\n        \"type\": \"text\",\n        \"fontSize\": 20,\n        \"align\": \"right\",\n        \"dx\": 25 // wider right offset for alignment\n      },\n      \"encoding\": {\n        \"text\": {\n          \"field\": \"thousandSeparator\", // formatted version with commas\n          \"type\": \"nominal\"\n        },\n        \"y\": {\n          \"field\": \"Index\", // align with raw value rows\n          \"type\": \"ordinal\",\n          \"axis\": null\n        }\n      }\n    }\n  ]\n}'"
                }
              }
            },
            "jsonConfig": {
              "expr": {
                "Literal": {
                  "Value": "'{\"view\": {\"stroke\": null}}'"
                }
              }
            },
            "isNewDialogOpen": {
              "expr": {
                "Literal": {
                  "Value": "false"
                }
              }
            },
            "enableTooltips": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableContextMenu": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableHighlight": {
              "expr": {
                "Literal": {
                  "Value": "false"
                }
              }
            },
            "enableSelection": {
              "expr": {
                "Literal": {
                  "Value": "false"
                }
              }
            },
            "selectionMaxDataPoints": {
              "expr": {
                "Literal": {
                  "Value": "50D"
                }
              }
            },
            "version": {
              "expr": {
                "Literal": {
                  "Value": "'6.1.0'"
                }
              }
            }
          }
        }
      ],
      "developer": [
        {
          "properties": {
            "version": {
              "expr": {
                "Literal": {
                  "Value": "'1.8.1.0'"
                }
              }
            }
          }
        }
      ],
      "stateManagement": [
        {
          "properties": {
            "viewportHeight": {
              "expr": {
                "Literal": {
                  "Value": "380.9828338508255D"
                }
              }
            },
            "viewportWidth": {
              "expr": {
                "Literal": {
                  "Value": "518.8066311945178D"
                }
              }
            }
          }
        }
      ]
    },
    "visualContainerObjects": {
      "visualHeader": [
        {
          "properties": {
            "background": {
              "solid": {
                "color": {
                  "expr": {
                    "Literal": {
                      "Value": "'#FFF7CF'"
                    }
                  }
                }
              }
            },
            "border": {
              "solid": {
                "color": {
                  "expr": {
                    "Literal": {
                      "Value": "'#a38600'"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "border": [
        {
          "properties": {
            "show": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "color": {
              "solid": {
                "color": {
                  "expr": {
                    "ThemeDataColor": {
                      "ColorId": 0,
                      "Percent": -0.2
                    }
                  }
                }
              }
            },
            "radius": {
              "expr": {
                "Literal": {
                  "Value": "5D"
                }
              }
            }
          }
        }
      ]
    },
    "drillFilterOtherVisuals": true
  }
}