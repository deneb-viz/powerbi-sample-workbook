{
  "$schema": "https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/2.2.0/schema.json",
  "name": "0d6169af011e55c0198e",
  "position": {
    "x": 0,
    "y": 0,
    "z": 1000,
    "height": 243.92798690671029,
    "width": 912.07855973813412,
    "tabOrder": 2000
  },
  "visual": {
    "visualType": "deneb7E15AEF80B9E4D4F8E12924291ECE89A",
    "query": {
      "queryState": {
        "dataset": {
          "projections": [
            {
              "field": {
                "Column": {
                  "Expression": {
                    "SourceRef": {
                      "Entity": "actual_vs_budget"
                    }
                  },
                  "Property": "Date"
                }
              },
              "queryRef": "newData.Date",
              "nativeQueryRef": "Date"
            },
            {
              "field": {
                "Measure": {
                  "Expression": {
                    "SourceRef": {
                      "Entity": "actual_vs_budget"
                    }
                  },
                  "Property": "_AC"
                }
              },
              "queryRef": "newData._AC",
              "nativeQueryRef": "AC",
              "displayName": "AC"
            }
          ]
        }
      },
      "sortDefinition": {
        "sort": [
          {
            "field": {
              "Column": {
                "Expression": {
                  "SourceRef": {
                    "Entity": "actual_vs_budget"
                  }
                },
                "Property": "Date"
              }
            },
            "direction": "Ascending"
          }
        ],
        "isDefaultSort": true
      }
    },
    "objects": {
      "display": [
        {
          "properties": {}
        }
      ],
      "developer": [
        {
          "properties": {
            "version": {
              "expr": {
                "Literal": {
                  "Value": "'1.8.1.0'"
                }
              }
            }
          }
        }
      ],
      "vega": [
        {
          "properties": {
            "provider": {
              "expr": {
                "Literal": {
                  "Value": "'vegaLite'"
                }
              }
            },
            "jsonSpec": {
              "expr": {
                "Literal": {
                  "Value": "'{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n\n  \"data\": {\"name\": \"dataset\"}, // bound dataset (Power BI or external input)\n\n  // PARAMS (constants used for scaling, color, and layout)\n  \"params\": [\n    {\"name\": \"bwActual\", \"value\": 0.8}, // bar width (Actual)\n    {\"name\": \"bwBudget\", \"value\": 0.8}, // bar width (Budget)\n    {\"name\": \"bwPlan\", \"value\": 0.8},   // bar width (Plan)\n    {\"name\": \"bwDelta\", \"value\": 0.15}, // bar width (Delta comparison)\n\n    {\"name\": \"_strokeColour\", \"value\": \"black\"}, // border stroke color\n    {\"name\": \"_actualColour\", \"value\": \"navy\"},   // main Actual bar color\n    {\"name\": \"_forecastColour\", \"value\": \"#f0eee9\"}, // forecast bar color (light)\n    {\"name\": \"_forecastPlanColour\", \"value\": \"url(#diagonal-stripe-1-30)\"}, // patterned forecast fill\n    {\"name\": \"_planColour\", \"value\": \"white\"}, // plan bar color\n\n    {\"name\": \"textMultiplier\", \"value\": 4.5}, // scales axis label font\n    {\"name\": \"labelMultiplier\", \"value\": 4},  // scales data label font\n    {\"name\": \"_deltaOffsetNEG\", \"value\": 1.1} // offset control for negative variance\n  ],\n\n  // TRANSFORM (derives helper fields and contextual variables)\n  \"transform\": [\n    {\n      // compute global min and max for AC (used in highlight logic)\n      \"window\": [\n        {\"op\": \"max\", \"field\": \"AC\", \"as\": \"max_AC\"},\n        {\"op\": \"min\", \"field\": \"AC\", \"as\": \"min_AC\"}\n      ],\n      \"frame\": [null, null]\n    },\n    {\"calculate\": \"now()\", \"as\": \"_now\"}, // current time reference\n    {\"calculate\": \"datetime( now())\", \"as\": \"_datetime\"}, // current datetime object\n    {\n      \"calculate\": \"year(utcFormat(datetime( now()), ''%d-%b-%y''))\",\n      \"as\": \"_currentYearUtc\" // extract year for potential logic use\n    },\n    {\n      \"calculate\": \"utcFormat(datetime( now()), ''%d-%b-%y'')\",\n      \"as\": \"_utcFormat\" // formatted string representation of today\n    },\n    {\n      // hardcoded “today” for consistent comparison logic\n      \"name\": \"_DATE_TODAY\",\n      \"calculate\": \"datetime(2024, 5, 1)\", // June 1, 2024 (month index 5)\n      \"as\": \"_dateToday\"\n    },\n    {\n      // binary comparison of data date vs. hardcoded today\n      \"name\": \"_DATE_TEST\",\n      \"calculate\": \"datum._dateToday > datum[''Date''] ? 0 : 1 \",\n      \"as\": \"_dateTest\" // 0 = past (Actual), 1 = future (Forecast)\n    },\n    {\n      \"calculate\": \"datum[''AC''] - datum[''PL'']\",\n      \"as\": \"__varianceToPlan\" // difference between Actual and Plan\n    },\n    {\n      \"calculate\": \"datum.__varianceToPlan > 0 ? -1: 1\",\n      \"as\": \"__deltaOffsetMultiplier\" // directional multiplier for label offsets\n    },\n    {\n      \"calculate\": \"datum.__varianceToPlan > 0 ? 1.4 : 1.99\",\n      \"as\": \"__deltaOffsetDivider\" // divider scaling based on variance sign\n    },\n    {\n      \"calculate\": \"(( datum[''AC''] - datum[''PL''] ) / datum[''PL''])\",\n      \"as\": \"__variancePCT\" // percent variance vs. Plan\n    },\n    {\n      \"calculate\": \"(bwDelta-(bwDelta*2))\",\n      \"as\": \"_deltaWidth\" // derived delta bar width\n    },\n    {\n      \"calculate\": \"(bwPlan - bwDelta)\",\n      \"as\": \"_offsetPlanDelta\" // x-offset for delta alignment\n    },\n    {\n      \"calculate\": \"datum.__variancePCT > 0 ? -2 : 1\",\n      \"as\": \"_deltaOffset\" // offset for text or delta positioning\n    },\n    {\n      // delta color selection (green if positive, red otherwise)\n      \"calculate\": \"datum[''AC''] > datum[''PL''] ? ''#c3f550'' : ''tomato''\",\n      \"as\": \"_deltaColourFormat\"\n    },\n    {\n      // stroke color based on delta direction\n      \"calculate\": \"datum[''AC''] > datum[''PL''] ? _strokeColour : ''black''\",\n      \"as\": \"_deltaStrokeFormat\"\n    },\n    {\n      // global offset used for alignment\n      \"calculate\": \"(bwPlan) * -0.169\",\n      \"as\": \"_globalOffset\"\n    }\n  ],\n\n  // GLOBAL ENCODING (applies across all layers)\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"Date\", // x-axis field\n      \"type\": \"nominal\", // treated as categories\n      \"axis\": {\n        \"title\": null, // no x-axis title\n        \"domain\": true, // show axis baseline\n        \"labels\": true, // show tick labels\n        \"formatType\": \"pbiFormat\", // Power BI-style formatting\n        \"format\": \"MMM-yy\", // month-year format\n        \"labelAngle\": 0, // horizontal labels\n        \"labelAlign\": \"center\",\n        \"labelPadding\": 5,\n        \"labelOffset\": 0,\n        // dynamic scaling of label font size\n        \"labelFontSize\": {\n          \"expr\": \" (bandwidth(''x'') / textMultiplier ) * bwActual+3\"\n        }\n      }\n    },\n    \"y\": {\n      \"field\": \"AC\", // Actual value for y-position\n      \"type\": \"quantitative\",\n      \"axis\": null, // hide y-axis elements\n      \"scale\": {\"zero\": false} // non-zero baseline scaling\n    },\n    \"color\": {\n      // global color encoding used for highlights and forecasting\n      \"condition\": [\n        {\n          \"test\": \"datum.AC === datum.max_AC\",\n          \"value\": \"limegreen\" // highlight maximum AC value\n        },\n        {\n          \"test\": \"datum.AC === datum.min_AC\",\n          \"value\": \"red\" // highlight minimum AC value\n        },\n        {\n          \"test\": \"datum._dateTest == 1\",\n          \"value\": \"whitesmoke\" // forecasted (future) values\n        }\n      ],\n      \"value\": \"navy\" // default (past) Actual bar color\n    }\n  },\n\n  \"description\": \"_LAYER_\", // document grouping or reference label\n\n  // LAYERS (rendered in order)\n  \"layer\": [\n    {\n      \"description\": \"ACTUAL_BAR\", // primary bar for Actual and Forecast values\n      \"mark\": {\n        \"type\": \"bar\",\n        \"width\": {\n          \"expr\": \"(bandwidth(''x'')) * (bwActual )\" // scaled bar width\n        },\n        // conditional color fill by date test\n        \"color\": {\n          \"expr\": \"datum._dateTest == 0 ? _actualColour : _forecastColour\"\n        },\n        \"stroke\": {\n          \"expr\": \"_strokeColour\" // consistent stroke border\n        },\n        \"strokeWidth\": 0.6 // thin outline for visual separation\n      }\n    },\n    {\n      \"description\": \"ACTUAL_BAR\", // duplicate bar (may support layering or effect)\n      \"mark\": {\n        \"type\": \"bar\",\n        \"width\": {\n          \"expr\": \"(bandwidth(''x'')) * (bwActual )\"\n        },\n        \"stroke\": {\n          \"expr\": \"_strokeColour\"\n        },\n        \"strokeWidth\": 0.6\n      }\n    },\n    {\n      \"description\": \"ACTUAL_DATA_LABELS\", // overlayed value labels\n      \"mark\": {\n        \"type\": \"text\",\n        // conditional label color (white on dark past bars, black on light forecast bars)\n        \"color\": {\n          \"expr\": \"datum._dateTest == 0 ? ''white'' : ''black''\"\n        },\n        \"fontSize\": {\n          \"expr\": \" ( bandwidth(''x'')/ labelMultiplier ) * bwActual\" // responsive label sizing\n        },\n        \"yOffset\": 3, // nudge text down slightly\n        \"xOffset\": -4, // small horizontal shift\n        \"baseline\": \"top\", // anchor to bar top\n        \"align\": \"left\", // align text left of mark\n        \"fontWeight\": \"bold\" // improve legibility\n      },\n      \"encoding\": {\n        \"text\": {\n          \"field\": \"AC\", // label uses Actual value\n          \"type\": \"quantitative\",\n          \"format\": \".2s\" // compact SI formatting\n        },\n        \"color\": {\n          // highlight label color on min/max bars\n          \"condition\": [\n            {\"test\": \"datum.AC === datum.max_AC\", \"value\": \"white\"},\n            {\"test\": \"datum.AC === datum.min_AC\", \"value\": \"white\"},\n            {\"test\": \"datum._dateTest == 1\", \"value\": \"black\"}\n          ],\n          \"value\": \"white\" // default white for dark Actual bars\n        }\n      }\n    }\n  ]\n}'"
                }
              }
            },
            "jsonConfig": {
              "expr": {
                "Literal": {
                  "Value": "'{\n  \"background\": \"transparent\",\n  \"view\": {\"stroke\": \"transparent\"},\n  \"font\": \"Segoe UI\",\n  \"arc\": {},\n  \"area\": {\n    \"line\": true,\n    \"opacity\": 0.6\n  },\n  \"bar\": {},\n  \"line\": {\n    \"stroke\": \"dimgrey\",\n    \"strokeWidth\": 3,\n    \"strokeCap\": \"round\",\n    \"strokeJoin\": \"round\"\n  },\n  \"path\": {},\n  \"point\": {\n    \"filled\": true,\n    \"size\": 150\n  },\n  \"rect\": {},\n  \"shape\": {},\n  \"symbol\": {\n    \"strokeWidth\": 1.5,\n    \"size\": 50\n  },\n  \"text\": {\n    \"font\": \"Segoe UI\",\n    \"fontSize\": 12,\n    \"fill\": \"#605E5C\"\n  },\n  \"axis\": {\n    \"ticks\": false,\n    \"grid\": false,\n    \"domain\": false,\n    \"labelColor\": \"#605E5C\",\n    \"labelFontSize\": 12,\n    \"titleFont\": \"wf_standard-font, helvetica, arial, sans-serif\",\n    \"titleColor\": \"#252423\",\n    \"titleFontSize\": 16,\n    \"titleFontWeight\": \"normal\"\n  },\n  \"axisQuantitative\": {\n    \"tickCount\": 3,\n    \"grid\": true,\n    \"gridColor\": \"#C8C6C4\",\n    \"gridDash\": [1, 5],\n    \"labelFlush\": false\n  },\n  \"axisX\": {\"labelPadding\": 5},\n  \"axisY\": {\"labelPadding\": 10},\n  \"header\": {\n    \"titleFont\": \"wf_standard-font, helvetica, arial, sans-serif\",\n    \"titleFontSize\": 16,\n    \"titleColor\": \"#252423\",\n    \"labelFont\": \"Segoe UI\",\n    \"labelFontSize\": 13.333333333333332,\n    \"labelColor\": \"#605E5C\"\n  },\n  \"legend\": {\n    \"titleFont\": \"Segoe UI\",\n    \"titleFontWeight\": \"bold\",\n    \"titleColor\": \"#605E5C\",\n    \"labelFont\": \"Segoe UI\",\n    \"labelFontSize\": 13.333333333333332,\n    \"labelColor\": \"#605E5C\",\n    \"symbolType\": \"circle\",\n    \"symbolSize\": 75\n  }\n}'"
                }
              }
            },
            "isNewDialogOpen": {
              "expr": {
                "Literal": {
                  "Value": "false"
                }
              }
            },
            "version": {
              "expr": {
                "Literal": {
                  "Value": "'6.1.0'"
                }
              }
            },
            "enableTooltips": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableContextMenu": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableHighlight": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableSelection": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "selectionMaxDataPoints": {
              "expr": {
                "Literal": {
                  "Value": "50D"
                }
              }
            }
          }
        }
      ],
      "stateManagement": [
        {
          "properties": {
            "viewportHeight": {
              "expr": {
                "Literal": {
                  "Value": "229.9279869067103D"
                }
              }
            },
            "viewportWidth": {
              "expr": {
                "Literal": {
                  "Value": "898.0785597381341D"
                }
              }
            }
          }
        }
      ]
    },
    "visualContainerObjects": {
      "border": [
        {
          "properties": {
            "show": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "color": {
              "solid": {
                "color": {
                  "expr": {
                    "Literal": {
                      "Value": "'#B3B3B3'"
                    }
                  }
                }
              }
            },
            "radius": {
              "expr": {
                "Literal": {
                  "Value": "6D"
                }
              }
            }
          }
        }
      ],
      "title": [
        {
          "properties": {
            "text": {
              "expr": {
                "Literal": {
                  "Value": "'cf_encoding_chart'"
                }
              }
            }
          }
        }
      ],
      "visualHeader": [
        {
          "properties": {
            "background": {
              "solid": {
                "color": {
                  "expr": {
                    "Literal": {
                      "Value": "'#FFF7CF'"
                    }
                  }
                }
              }
            },
            "border": {
              "solid": {
                "color": {
                  "expr": {
                    "ThemeDataColor": {
                      "ColorId": 8,
                      "Percent": -0.25
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "drillFilterOtherVisuals": true
  },
  "parentGroupName": "352b71493de97a5ca201",
  "isHidden": true
}