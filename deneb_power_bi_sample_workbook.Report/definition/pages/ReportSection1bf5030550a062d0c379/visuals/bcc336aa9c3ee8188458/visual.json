{
  "$schema": "https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.1.0/schema.json",
  "name": "bcc336aa9c3ee8188458",
  "position": {
    "x": 37.241379310344826,
    "y": 138.692033293698,
    "z": 2000,
    "height": 137.40784780023782,
    "width": 902.7824019024971,
    "tabOrder": 1000
  },
  "visual": {
    "visualType": "textbox",
    "objects": {
      "general": [
        {
          "properties": {
            "paragraphs": [
              {
                "textRuns": [
                  {
                    "value": "Conditional formatting can be intricately specified using ",
                    "textStyle": {
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": "expressions ( ",
                    "textStyle": {
                      "fontStyle": "italic",
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": "\"expr\":",
                    "textStyle": {
                      "fontWeight": "bold",
                      "fontStyle": "italic",
                      "fontSize": "16pt",
                      "color": "#24ad8a"
                    }
                  },
                  {
                    "value": " )",
                    "textStyle": {
                      "fontStyle": "italic",
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": ", which allows for nuanced control over mark property styling. Here we use ",
                    "textStyle": {
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": "expressions",
                    "textStyle": {
                      "fontWeight": "bold",
                      "fontSize": "16pt",
                      "textDecoration": "underline",
                      "color": "#e044a7"
                    },
                    "url": "https://vega.github.io/vega/docs/expressions/"
                  },
                  {
                    "value": " ",
                    "textStyle": {
                      "fontWeight": "bold",
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": "to apply formatting to the ",
                    "textStyle": {
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": "fill",
                    "textStyle": {
                      "fontStyle": "italic",
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": ", ",
                    "textStyle": {
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": "stroke ",
                    "textStyle": {
                      "fontStyle": "italic",
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": "and ",
                    "textStyle": {
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": "strokeWidth ",
                    "textStyle": {
                      "fontStyle": "italic",
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": "properties with if-like expressions.",
                    "textStyle": {
                      "fontSize": "16pt"
                    }
                  }
                ]
              },
              {
                "textRuns": [
                  {
                    "value": "Eg: ",
                    "textStyle": {
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": "ifTest",
                    "textStyle": {
                      "fontWeight": "bold",
                      "fontFamily": "Consolas",
                      "fontStyle": "italic",
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": " ? ",
                    "textStyle": {
                      "fontWeight": "bold",
                      "fontFamily": "Consolas",
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": "thenValue",
                    "textStyle": {
                      "fontWeight": "bold",
                      "fontFamily": "Consolas",
                      "fontStyle": "italic",
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": " : ",
                    "textStyle": {
                      "fontWeight": "bold",
                      "fontFamily": "Consolas",
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": "elseValue",
                    "textStyle": {
                      "fontWeight": "bold",
                      "fontFamily": "Consolas",
                      "fontStyle": "italic",
                      "fontSize": "16pt"
                    }
                  },
                  {
                    "value": " ",
                    "textStyle": {
                      "fontSize": "16pt"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "visualContainerObjects": {
      "background": [
        {
          "properties": {
            "show": {
              "expr": {
                "Literal": {
                  "Value": "false"
                }
              }
            }
          }
        }
      ],
      "general": [
        {
          "properties": {
            "keepLayerOrder": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            }
          }
        }
      ]
    },
    "drillFilterOtherVisuals": true
  }
}