{
  "$schema": "https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/2.2.0/schema.json",
  "name": "7ac7fb1ff9f7e81bf570",
  "position": {
    "x": 1299.1550358505763,
    "y": 139.797391080498,
    "z": 12500,
    "height": 282.99012693935123,
    "width": 605.24682651622,
    "tabOrder": 2000
  },
  "visual": {
    "visualType": "deneb7E15AEF80B9E4D4F8E12924291ECE89A",
    "query": {
      "queryState": {
        "dataset": {
          "projections": [
            {
              "field": {
                "Aggregation": {
                  "Expression": {
                    "Column": {
                      "Expression": {
                        "SourceRef": {
                          "Entity": "nps_score"
                        }
                      },
                      "Property": "value"
                    }
                  },
                  "Function": 0
                }
              },
              "queryRef": "Sum(tbl_nps_score.value)",
              "nativeQueryRef": "value"
            },
            {
              "field": {
                "Column": {
                  "Expression": {
                    "SourceRef": {
                      "Entity": "nps_score"
                    }
                  },
                  "Property": "type"
                }
              },
              "queryRef": "tbl_nps_score.type",
              "nativeQueryRef": "type"
            },
            {
              "field": {
                "Aggregation": {
                  "Expression": {
                    "Column": {
                      "Expression": {
                        "SourceRef": {
                          "Entity": "nps_score"
                        }
                      },
                      "Property": "percentage"
                    }
                  },
                  "Function": 0
                }
              },
              "queryRef": "Sum(tbl_nps_score.percentage)",
              "nativeQueryRef": "percentage"
            },
            {
              "field": {
                "Column": {
                  "Expression": {
                    "SourceRef": {
                      "Entity": "nps_score"
                    }
                  },
                  "Property": "question"
                }
              },
              "queryRef": "tbl_nps_score.question",
              "nativeQueryRef": "question"
            },
            {
              "field": {
                "Column": {
                  "Expression": {
                    "SourceRef": {
                      "Entity": "nps_score"
                    }
                  },
                  "Property": "Index"
                }
              },
              "queryRef": "Sum(tbl_nps_score.Index)",
              "nativeQueryRef": "Index1"
            }
          ]
        }
      },
      "sortDefinition": {
        "sort": [
          {
            "field": {
              "Aggregation": {
                "Expression": {
                  "Column": {
                    "Expression": {
                      "SourceRef": {
                        "Entity": "nps_score"
                      }
                    },
                    "Property": "value"
                  }
                },
                "Function": 0
              }
            },
            "direction": "Descending"
          }
        ],
        "isDefaultSort": true
      }
    },
    "objects": {
      "display": [
        {
          "properties": {}
        }
      ],
      "vega": [
        {
          "properties": {
            "provider": {
              "expr": {
                "Literal": {
                  "Value": "'vegaLite'"
                }
              }
            },
            "jsonSpec": {
              "expr": {
                "Literal": {
                  "Value": "'{\n  \"data\": {\"name\": \"dataset\"}, // input dataset reference\n\n  // TRANSFORM BLOCK (data preparation before plotting)\n  \"transform\": [\n    {\n      // CALCULATE (early version, assigns numeric score to each response type)\n      \"calculate\": \"if(datum.type === ''Strongly disagree'',-2,0) + if(datum.type===''Disagree'',-1,0) + if(datum.type ==''Neither agree nor disagree'',0,0) + if(datum.type ===''Agree'',1,0) + if(datum.type ===''Strongly agree'',2,0)\",\n      \"as\": \"question_order\" // creates a new field ''question_order''\n    },\n    {\n      // another equivalent expression (same purpose, different syntax)\n      \"calculate\": \"if(datum.type === ''Strongly disagree'',-2, if(datum.type===''Disagree'',-1, if(datum.type ==''Neither agree nor disagree'',0, if(datum.type ===''Agree'',1, if(datum.type ===''Strongly agree'',2,0)))))\",\n      \"as\": \"question_order\"\n    },\n    {\n      // more compact ternary version of the same mapping\n      \"calculate\": \"datum.type === ''Strongly disagree'' ? -2 : datum.type===''Disagree'' ? -1 : datum.type ==''Neither agree nor disagree'' ? 0 : datum.type ===''Agree'' ? 1 : datum.type ===''Strongly agree'' ? 2 : null\",\n      \"as\": \"question_order\"\n    },\n    {\n      // CALCULATE signed percentage (negative for disagreement)\n      \"calculate\": \"if(datum.type === ''Disagree'' || datum.type === ''Strongly disagree'', datum.percentage,0) + if(datum.type === ''Neither agree nor disagree'', datum.percentage / 2,0)\",\n      \"as\": \"signed_percentage\"\n    },\n    {\n      // STACK (computes start and end positions for stacked bars)\n      \"stack\": \"percentage\",\n      \"as\": [\"v1\", \"v2\"], // creates two new fields = start & end values\n      \"groupby\": [\"question\"], // stack bars within each question group\n      \"sort\": [\n        {\n          \"field\": \"question_order\", // use custom response order\n          \"order\": \"ascending\"\n        }\n      ]\n    },\n    {\n      // JOINAGGREGATE (sums signed percentages to center bars)\n      \"joinaggregate\": [\n        {\n          \"field\": \"signed_percentage\",\n          \"op\": \"sum\",\n          \"as\": \"offset\" // total offset per question\n        }\n      ],\n      \"groupby\": [\"question\"]\n    },\n    {\n      // CALCULATE new normalized x positions using offset\n      \"calculate\": \"datum.v1 - datum.offset\",\n      \"as\": \"nx\"\n    },\n    {\n      // CALCULATE end position for each bar segment\n      \"calculate\": \"datum.v2 - datum.offset\",\n      \"as\": \"nx2\"\n    }\n  ],\n\n  // MARK TYPE (defines visual geometry)\n  \"mark\": \"bar\", // use horizontal bars for responses\n\n  // GLOBAL ENCODING (applies to bar mark)\n  \"encoding\": {\n    // X CHANNEL (horizontal position of bar start)\n    \"x\": {\n      \"field\": \"nx\", // custom calculated field (bar start)\n      \"type\": \"quantitative\", // continuous scale (percent values)\n      \"title\": \"Percentage\" // x-axis title\n    },\n\n    // X2 CHANNEL (horizontal end position of bar)\n    \"x2\": {\"field\": \"nx2\"}, // defines end of each stacked segment (paired with x)\n\n    // Y CHANNEL (vertical grouping by question)\n    \"y\": {\n      \"field\": \"question\",\n      \"type\": \"nominal\", // each question is a distinct category\n      \"title\": \"Question\",\n      \"axis\": {\n        \"offset\": 5, // small space between axis and bars\n        \"ticks\": false, // remove tick marks for cleaner layout\n        \"minExtent\": 60, // ensures enough space for long question labels\n        \"domain\": false // hides axis baseline\n      }\n    },\n\n    // COLOR CHANNEL (encodes sentiment type)\n    \"color\": {\n      \"field\": \"type\", // map each response type to a color\n      \"type\": \"nominal\", // categorical variable\n      \"title\": \"Response\",\n      \"scale\": {\n        // explicit order of categories\n        \"domain\": [\n          \"Strongly disagree\",\n          \"Disagree\",\n          \"Neither agree nor disagree\",\n          \"Agree\",\n          \"Strongly agree\"\n        ],\n        // matching color palette for each category\n        \"range\": [\n          \"#c30d24\", // strong disagreement (red)\n          \"#f3a583\", // mild disagreement (peach)\n          \"#cccccc\", // neutral (gray)\n          \"#94c6da\", // mild agreement (light blue)\n          \"#1770ab\"  // strong agreement (deep blue)\n        ],\n        \"type\": \"ordinal\" // preserves order of responses across the legend\n      }\n    },\n\n    // ORDER CHANNEL (controls stacking order of bars)\n    \"order\": {\"field\": \"question_order\"} // ensures consistent left-to-right order\n  }\n}'"
                }
              }
            },
            "jsonConfig": {
              "expr": {
                "Literal": {
                  "Value": "'{}'"
                }
              }
            },
            "isNewDialogOpen": {
              "expr": {
                "Literal": {
                  "Value": "false"
                }
              }
            },
            "enableTooltips": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableContextMenu": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "enableHighlight": {
              "expr": {
                "Literal": {
                  "Value": "false"
                }
              }
            },
            "enableSelection": {
              "expr": {
                "Literal": {
                  "Value": "false"
                }
              }
            },
            "selectionMaxDataPoints": {
              "expr": {
                "Literal": {
                  "Value": "50D"
                }
              }
            },
            "version": {
              "expr": {
                "Literal": {
                  "Value": "'6.4.1'"
                }
              }
            }
          }
        }
      ],
      "developer": [
        {
          "properties": {
            "version": {
              "expr": {
                "Literal": {
                  "Value": "'1.8.2.0'"
                }
              }
            }
          }
        }
      ],
      "stateManagement": [
        {
          "properties": {
            "viewportHeight": {
              "expr": {
                "Literal": {
                  "Value": "248.99012693935123D"
                }
              }
            },
            "viewportWidth": {
              "expr": {
                "Literal": {
                  "Value": "591.24682651622D"
                }
              }
            }
          }
        }
      ]
    },
    "visualContainerObjects": {
      "border": [
        {
          "properties": {
            "show": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "color": {
              "solid": {
                "color": {
                  "expr": {
                    "Literal": {
                      "Value": "'#B3B3B3'"
                    }
                  }
                }
              }
            },
            "radius": {
              "expr": {
                "Literal": {
                  "Value": "6D"
                }
              }
            }
          }
        }
      ],
      "title": [
        {
          "properties": {
            "show": {
              "expr": {
                "Literal": {
                  "Value": "true"
                }
              }
            },
            "text": {
              "expr": {
                "Literal": {
                  "Value": "'NPS Stacked bar chart'"
                }
              }
            },
            "fontSize": {
              "expr": {
                "Literal": {
                  "Value": "11D"
                }
              }
            }
          }
        }
      ],
      "visualHeader": [
        {
          "properties": {
            "background": {
              "solid": {
                "color": {
                  "expr": {
                    "Literal": {
                      "Value": "'#FFF7CF'"
                    }
                  }
                }
              }
            },
            "border": {
              "solid": {
                "color": {
                  "expr": {
                    "Literal": {
                      "Value": "'#a38600'"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "drillFilterOtherVisuals": true
  }
}